name: Install yq
description: Installs mikefarah/yq on the job's runner
author: Daniel Weibel
inputs:
  version:
    description: The version of yq to install (by default, the latest version will be installed)
    required: false
  binary:
    description: The name of the yq binary to install (by default, 'yq_linux_amd64' and 'yq_darwin_amd64' are installed for Linux and macOS runners, respectively)
    required: false
runs:
  using: composite
  steps:

    - name: check-os
      run: test "${{ runner.os }}" = Windows && { echo "This action currently does not support Windows runners"; exit 1; } || exit 0
      shell: bash

    - name: determine-version
      run: |
        if [[ -z "${{ inputs.version }}" ]]; then
          # Determine latest version
          out=$(wget -q --content-on-error -O - "$GITHUB_API_URL"/repos/mikefarah/yq/releases/latest) || { echo "$out"; exit 1; }
          VERSION=$(echo "$out" | jq -r .tag_name)
        else
          # Verify user-supplied version
          out=$(wget -q --content-on-error -O - "$GITHUB_API_URL"/repos/mikefarah/yq/releases) || { echo "$out"; exit 1; }
          if ! echo "$out" | jq -r '.[].tag_name' | grep -q '^${{ inputs.version }}$'; then
            echo -e "${{ inputs.version }} is not a valid yq version (find existing versions on https://github.com/mikefarah/yq/releases)"
            exit 1
          else
            VERSION=${{ inputs.version }}
          fi
        fi
        echo "VERSION=$VERSION" >>"$GITHUB_ENV"
        echo "yq version $VERSION"
      shell: bash

    - name: determine-binary
      run: |
        if [[ -z "${{ inputs.binary }}" ]]; then
          # Use default binaries
          case "${{ runner.os }}" in
            Linux) BINARY=yq_linux_amd64 ;;
            macOS) BINARY=yq_darwin_amd64 ;;
          esac
        else
          # Verify user-supplied binary
          BINARY="${{ inputs.binary }}"
          out=$(wget -q --content-on-error -O - "$GITHUB_API_URL"/repos/mikefarah/yq/releases/tags/"$VERSION") || { echo "$out"; exit 1; }
          if ! echo "$out" | jq -r '.assets[].name' | grep -q "^$BINARY$"; then
            echo -e "$BINARY is not a valid binary of yq release $VERSION (find existing binaries on https://github.com/mikefarah/yq/releases/$VERSION)"
            exit 1
          fi
        fi
        echo "BINARY=$BINARY" >>"$GITHUB_ENV"
        echo "yq binary $BINARY"
      shell: bash

    - name: install
      run: |
        url=https://github.com/mikefarah/yq/releases/download/"$VERSION"/"$BINARY"
        echo "Install $url"
        sudo wget -q -O /usr/local/bin/yq "$url" && sudo chmod +x /usr/local/bin/yq
      shell: bash

    - name: verify
      run: |
        echo "Verify installation"
        if ! stderr=$(yq 2>&1 >/dev/null); then
          echo "::error::$stderr"
          exit 1
        fi
        echo "Installation successful"
      shell: bash
